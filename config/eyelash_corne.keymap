#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

&lt { flavor = "hold-preferred"; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        space_cadet: space_cadet {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_CADET";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-while-undecided;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        haneng {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <16 17>;
        };

        plusminusequal {
            bindings = <&kp EQUAL>;
            key-positions = <7 22>;
            layers = <2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&mt LEFT_WIN ESCAPE     &kp Q                                     &kp W  &kp E         &kp R        &kp T                                 &kp UP                &kp Y  &kp U      &kp I     &kp O      &kp P                                       &kp SEMICOLON
&mo 1                   &kp A                                     &kp S  &kp D         &kp F        &kp G                       &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J      &kp K     &kp L      &space_cadet RIGHT_SHIFT RIGHT_PARENTHESIS  &kp SINGLE_QUOTE
&space_cadet LCTRL TAB  &space_cadet LEFT_SHIFT LEFT_PARENTHESIS  &kp Z  &kp X         &kp C        &kp V          &kp SPACE              &kp DOWN              &kp B  &kp N      &kp M     &kp COMMA  &kp PERIOD                                  &kp SLASH
                                                                         &kp LEFT_ALT  &lt 2 ENTER  &kp BACKSPACE                                               &mo 3  &kp SPACE  &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_action {
            display-name = "special";
            bindings = <
&trans  &kp LC(T)      &kp LC(W)  &kp F19  &kp F5      &kp F17                                      &mmv MOVE_UP                     &kp LC(HOME)  &kp LC(HOME)  &kp LC(LEFT)    &kp LC(RIGHT)  &kp LC(END)  &kp LC(LS(LEFT))
&trans  &kp LC(LS(T))  &kp F14    &kp DEL  &kp LA(F4)  &kp F18                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS     &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT    &kp LS(MINUS)
&trans  &kp LA(HOME)   &trans     &trans   &trans      &kp LG(LS(S))  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans        &kp HOME      &kp PG_UP       &kp PAGE_DOWN  &kp END      &trans
                                  &trans   &trans      &trans                                                                        &kp INS       &kp DEL       &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_number {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LC(N5)                            &mmv MOVE_UP                     &kp PLUS         &kp N7        &kp N8        &kp N9        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS        &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp BSLH          &kp GRAVE
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(N5)  &trans                    &mmv MOVE_DOWN                   &kp KP_MULTIPLY  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PIPE          &kp TILDE
                                            &trans            &trans            &none                                                                  &kp RET          &kp N0        &kp DOT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_system {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&bt BT_CLR      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &trans        &trans        &trans        &trans        &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                            &trans        &trans        &trans                                                                 &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
